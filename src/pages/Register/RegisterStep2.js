import React, { useEffect } from 'react';
import { Helmet } from 'react-helmet';
import Grid from '@material-ui/core/Grid';
import './register.scss';
import ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';
import { Link } from 'react-router-dom';
import CheckIcon from '@material-ui/icons/Check';
import Individuals from './Individuals';
import FashionBrands from './FashionBrands';
import Suppliers from './Suppliers';
import Organizations from './Organizations';
/* eslint-disable react/self-closing-comp, implicit-arrow-linebreak, react/jsx-curly-newline */
/* eslint-disable react/no-unknown-property */
/* eslint-disable operator-linebreak */

const Register = () => {
  const [isSelected, setIsSelected] = React.useState({
    Individuals: false,
    FashionBrands: false,
    Suppliers: false,
    Organizations: false,
    Other: false
  });
  useEffect(() => {
    console.log(isSelected);
  }, []);
  const IndustryInterestToggle = (e) => {
    const elementRemove = document.getElementsByClassName('options');
    for (let i = 0; i < 3; i++) {
      elementRemove[i].classList.remove('industrySelected');
    }
    const elementAdd = document.getElementById(`${e.target.id}`);
    elementAdd.classList.add('industrySelected');
  };
  const SpecifyDomainToggle = (e) => {
    // Revert CSS
    const elementRemove = document.getElementsByClassName('optionsDomain');
    for (let i = 0; i < 5; i++) {
      elementRemove[i].classList.remove('domainIconSelected');
      elementRemove[i].classList.remove('domainSelected');
    }
    const elementAddIcon = document.getElementById(`${e.target.id}`);
    console.log(elementAddIcon);
    elementAddIcon.classList.add('domainSelected');
  };
  return (
    <>
      <Helmet>
        <title>Register Step 2</title>
      </Helmet>
      <Grid container xs={12} id="registerWrap">
        <Grid item xs={12}>
          <p className="header">
            <Link to="/register/step1">
              <ArrowBackIosIcon
                style={{ fontSize: '30px', cursor: 'pointer' }}
              />
            </Link>
            <span>Sign up</span>
          </p>
          <p className="subHeader">Enter your sign up details</p>
        </Grid>
        <Grid container xs={12} style={{ marginTop: '30px' }}>
          <p className="contentHeader">Industry Intrest</p>
          <Grid container xs={12} spacing={3} style={{ margin: '20px 0' }}>
            <Grid item xs={3}>
              <button
                type="button"
                onClick={(e) => IndustryInterestToggle(e)}
                id="optionLeather"
                className="optionLeather options"
              >
                Leather
              </button>
            </Grid>
            <Grid item xs={3}>
              <button
                onClick={(e) => IndustryInterestToggle(e)}
                type="button"
                id="optionTextile"
                className="optionTextile options"
              >
                Textile
              </button>
            </Grid>
            <Grid item xs={3}>
              <button
                onClick={(e) => IndustryInterestToggle(e)}
                type="button"
                id="optionBoth"
                className="optionBoth options"
              >
                Both
              </button>
            </Grid>
          </Grid>
        </Grid>
        <Grid container xs={12} style={{ marginTop: '30px' }}>
          <p className="contentHeader">Specify your domain</p>
          <Grid
            container
            xs={12}
            align="center"
            spacing={3}
            style={{ margin: '20px 0', justifyContent: 'space-between' }}
          >
            <Grid item xs={2}>
              <button
                id="optionSupplier"
                onClick={(e) => {
                  setIsSelected({
                    ...isSelected,
                    Individuals: false,
                    FashionBrands: false,
                    Organizations: false,
                    Suppliers: true
                  });
                  SpecifyDomainToggle(e);
                }}
                type="button"
                className="optionSupplier options optionsDomain"
              >
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 36 34"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    id="optionSupplier"
                    className=""
                    d="M20.4286 33V21.3077C20.4286 20.8181 20.6205 20.3485 20.9621 20.0023C21.3036 19.656 21.7669 19.4615 22.25 19.4615H27.1071C27.5902 19.4615 28.0535 19.656 28.3951 20.0023C28.7367 20.3485 28.9286 20.8181 28.9286 21.3077V33M32.5714 31.7692V15.7692V31.7692ZM3.42857 15.7692V31.7692V15.7692ZM27.5982 1H8.40183C6.74812 1 5.25455 1.92308 4.6125 3.34308L1.32634 10.6154C0.219821 13.0623 2.05719 15.8346 4.90772 15.9231H5.05951C7.44254 15.9231 9.37402 13.9862 9.37402 11.9054C9.37402 13.9823 11.3062 15.9231 13.6893 15.9231C16.0723 15.9231 18 14.1246 18 11.9054C18 13.9823 19.9315 15.9231 22.3145 15.9231C24.6975 15.9231 26.6298 14.1246 26.6298 11.9054C26.6298 14.1246 28.5613 15.9231 30.9443 15.9231H31.0923C33.9428 15.8331 35.7802 13.0608 34.6737 10.6154L31.3875 3.34308C30.7454 1.92308 29.2519 1 27.5982 1ZM1 33H35H1ZM8.89286 19.4615H14.9643C15.4474 19.4615 15.9106 19.656 16.2522 20.0023C16.5938 20.3485 16.7857 20.8181 16.7857 21.3077V28.0769H7.07143V21.3077C7.07143 20.8181 7.26333 20.3485 7.60491 20.0023C7.9465 19.656 8.40978 19.4615 8.89286 19.4615Z"
                    stroke="#B3B6B6"
                    stroke-width="1.5"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
              </button>
              <p className="optionsHeading">Suppliers</p>
            </Grid>
            <Grid item xs={2}>
              <button
                id="optionOrganizations"
                onClick={(e) => {
                  setIsSelected({
                    ...isSelected,
                    Individuals: false,
                    FashionBrands: false,
                    Organizations: true,
                    Suppliers: false
                  });
                  SpecifyDomainToggle(e);
                }}
                type="button"
                className="optionOrganizations options optionsDomain"
              >
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 34 36"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    id="optionOrganizations"
                    d="M10.8462 30.1429V35V30.1429ZM3.46154 1H18.2308C18.8836 1 19.5097 1.25587 19.9713 1.71131C20.433 2.16676 20.6923 2.78447 20.6923 3.42857V34.6964C20.6923 34.7769 20.6599 34.8542 20.6022 34.9111C20.5445 34.968 20.4662 35 20.3846 35H1V3.42857C1 2.78447 1.25934 2.16676 1.72097 1.71131C2.1826 1.25587 2.8087 1 3.46154 1V1ZM21.9231 13.1429H30.5385C31.1913 13.1429 31.8174 13.3987 32.279 13.8542C32.7407 14.3096 33 14.9273 33 15.5714V35H20.6923V14.3571C20.6923 14.0351 20.822 13.7262 21.0528 13.4985C21.2836 13.2708 21.5967 13.1429 21.9231 13.1429Z"
                    stroke="#B3B6B6"
                    stroke-width="1.5"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                  <path
                    id="optionOrganizations"
                    d="M4.85229 31.3471C4.59739 31.38 4.33845 31.3333 4.11181 31.2136C3.88517 31.0939 3.70221 30.9072 3.58861 30.6797C3.47501 30.4522 3.43647 30.1952 3.4784 29.945C3.52033 29.6948 3.64062 29.4638 3.8224 29.2844C4.00418 29.1051 4.23831 28.9864 4.49194 28.945C4.74557 28.9037 5.00596 28.9417 5.23657 29.0538C5.46718 29.1659 5.65643 29.3464 5.77776 29.57C5.89908 29.7936 5.9464 30.0491 5.91306 30.3005C5.87788 30.5659 5.7548 30.8124 5.56297 31.0017C5.37114 31.191 5.12129 31.3124 4.85229 31.3471ZM4.85229 25.2757C4.59739 25.3086 4.33845 25.2619 4.11181 25.1422C3.88517 25.0225 3.70221 24.8358 3.58861 24.6082C3.47501 24.3807 3.43647 24.1238 3.4784 23.8736C3.52033 23.6234 3.64062 23.3924 3.8224 23.213C4.00418 23.0337 4.23831 22.915 4.49194 22.8736C4.74557 22.8322 5.00596 22.8703 5.23657 22.9824C5.46718 23.0944 5.65643 23.2749 5.77776 23.4985C5.89908 23.7221 5.9464 23.9776 5.91306 24.2291C5.87788 24.4945 5.7548 24.741 5.56297 24.9303C5.37114 25.1195 5.12129 25.241 4.85229 25.2757ZM4.85229 19.2042C4.59739 19.2371 4.33845 19.1905 4.11181 19.0708C3.88517 18.951 3.70221 18.7643 3.58861 18.5368C3.47501 18.3093 3.43647 18.0524 3.4784 17.8022C3.52033 17.5519 3.64062 17.3209 3.8224 17.1416C4.00418 16.9622 4.23831 16.8436 4.49194 16.8022C4.74557 16.7608 5.00596 16.7988 5.23657 16.9109C5.46718 17.023 5.65643 17.2035 5.77776 17.4271C5.89908 17.6507 5.9464 17.9062 5.91306 18.1577C5.87788 18.4231 5.7548 18.6696 5.56297 18.8588C5.37114 19.0481 5.12129 19.1695 4.85229 19.2042ZM4.85229 13.1328C4.59739 13.1657 4.33845 13.119 4.11181 12.9993C3.88517 12.8796 3.70221 12.6929 3.58861 12.4654C3.47501 12.2379 3.43647 11.981 3.4784 11.7307C3.52033 11.4805 3.64062 11.2495 3.8224 11.0702C4.00418 10.8908 4.23831 10.7721 4.49194 10.7308C4.74557 10.6894 5.00596 10.7274 5.23657 10.8395C5.46718 10.9516 5.65643 11.1321 5.77776 11.3557C5.89908 11.5793 5.9464 11.8348 5.91306 12.0863C5.87788 12.3517 5.7548 12.5981 5.56297 12.7874C5.37114 12.9767 5.12129 13.0981 4.85229 13.1328ZM4.85229 7.06139C4.59739 7.09428 4.33845 7.04759 4.11181 6.92789C3.88517 6.80819 3.70221 6.62147 3.58861 6.39395C3.47501 6.16643 3.43647 5.90953 3.4784 5.6593C3.52033 5.40906 3.64062 5.17807 3.8224 4.99872C4.00418 4.81938 4.23831 4.7007 4.49194 4.65933C4.74557 4.61796 5.00596 4.65598 5.23657 4.76806C5.46718 4.88015 5.65643 5.06065 5.77776 5.28426C5.89908 5.50786 5.9464 5.76334 5.91306 6.01482C5.87788 6.28022 5.7548 6.52672 5.56297 6.71598C5.37114 6.90525 5.12129 7.02668 4.85229 7.06139ZM11.0061 25.2757C10.7512 25.3086 10.4923 25.2619 10.2657 25.1422C10.039 25.0225 9.85606 24.8358 9.74246 24.6082C9.62885 24.3807 9.59031 24.1238 9.63224 23.8736C9.67417 23.6234 9.79447 23.3924 9.97625 23.213C10.158 23.0337 10.3922 22.915 10.6458 22.8736C10.8994 22.8322 11.1598 22.8703 11.3904 22.9824C11.621 23.0944 11.8103 23.2749 11.9316 23.4985C12.0529 23.7221 12.1002 23.9776 12.0669 24.2291C12.0317 24.4945 11.9087 24.741 11.7168 24.9303C11.525 25.1195 11.2751 25.241 11.0061 25.2757ZM11.0061 19.2042C10.7512 19.2371 10.4923 19.1905 10.2657 19.0708C10.039 18.951 9.85606 18.7643 9.74246 18.5368C9.62885 18.3093 9.59031 18.0524 9.63224 17.8022C9.67417 17.5519 9.79447 17.3209 9.97625 17.1416C10.158 16.9622 10.3922 16.8436 10.6458 16.8022C10.8994 16.7608 11.1598 16.7988 11.3904 16.9109C11.621 17.023 11.8103 17.2035 11.9316 17.4271C12.0529 17.6507 12.1002 17.9062 12.0669 18.1577C12.0317 18.4231 11.9087 18.6696 11.7168 18.8588C11.525 19.0481 11.2751 19.1695 11.0061 19.2042ZM11.0061 13.1328C10.7512 13.1657 10.4923 13.119 10.2657 12.9993C10.039 12.8796 9.85606 12.6929 9.74246 12.4654C9.62885 12.2379 9.59031 11.981 9.63224 11.7307C9.67417 11.4805 9.79447 11.2495 9.97625 11.0702C10.158 10.8908 10.3922 10.7721 10.6458 10.7308C10.8994 10.6894 11.1598 10.7274 11.3904 10.8395C11.621 10.9516 11.8103 11.1321 11.9316 11.3557C12.0529 11.5793 12.1002 11.8348 12.0669 12.0863C12.0317 12.3517 11.9087 12.5981 11.7168 12.7874C11.525 12.9767 11.2751 13.0981 11.0061 13.1328ZM11.0061 7.06139C10.7512 7.09428 10.4923 7.04759 10.2657 6.92789C10.039 6.80819 9.85606 6.62147 9.74246 6.39395C9.62885 6.16643 9.59031 5.90953 9.63224 5.6593C9.67417 5.40906 9.79447 5.17807 9.97625 4.99872C10.158 4.81938 10.3922 4.7007 10.6458 4.65933C10.8994 4.61796 11.1598 4.65598 11.3904 4.76806C11.621 4.88015 11.8103 5.06065 11.9316 5.28426C12.0529 5.50786 12.1002 5.76334 12.0669 6.01482C12.0317 6.28022 11.9087 6.52672 11.7168 6.71598C11.525 6.90525 11.2751 7.02668 11.0061 7.06139ZM17.16 31.3471C16.9051 31.38 16.6461 31.3333 16.4195 31.2136C16.1929 31.0939 16.0099 30.9072 15.8963 30.6797C15.7827 30.4522 15.7442 30.1952 15.7861 29.945C15.828 29.6948 15.9483 29.4638 16.1301 29.2844C16.3119 29.1051 16.546 28.9864 16.7996 28.945C17.0533 28.9037 17.3137 28.9417 17.5443 29.0538C17.7749 29.1659 17.9641 29.3464 18.0854 29.57C18.2068 29.7936 18.2541 30.0491 18.2208 30.3005C18.1856 30.5659 18.0625 30.8124 17.8707 31.0017C17.6788 31.191 17.429 31.3124 17.16 31.3471ZM17.16 25.2757C16.9051 25.3086 16.6461 25.2619 16.4195 25.1422C16.1929 25.0225 16.0099 24.8358 15.8963 24.6082C15.7827 24.3807 15.7442 24.1238 15.7861 23.8736C15.828 23.6234 15.9483 23.3924 16.1301 23.213C16.3119 23.0337 16.546 22.915 16.7996 22.8736C17.0533 22.8322 17.3137 22.8703 17.5443 22.9824C17.7749 23.0944 17.9641 23.2749 18.0854 23.4985C18.2068 23.7221 18.2541 23.9776 18.2208 24.2291C18.1856 24.4945 18.0625 24.741 17.8707 24.9303C17.6788 25.1195 17.429 25.241 17.16 25.2757ZM17.16 19.2042C16.9051 19.2371 16.6461 19.1905 16.4195 19.0708C16.1929 18.951 16.0099 18.7643 15.8963 18.5368C15.7827 18.3093 15.7442 18.0524 15.7861 17.8022C15.828 17.5519 15.9483 17.3209 16.1301 17.1416C16.3119 16.9622 16.546 16.8436 16.7996 16.8022C17.0533 16.7608 17.3137 16.7988 17.5443 16.9109C17.7749 17.023 17.9641 17.2035 18.0854 17.4271C18.2068 17.6507 18.2541 17.9062 18.2208 18.1577C18.1856 18.4231 18.0625 18.6696 17.8707 18.8588C17.6788 19.0481 17.429 19.1695 17.16 19.2042Z"
                    fill="#B3B6B6"
                  />
                  <path
                    id="optionOrganizations"
                    d="M17.8712 12.7879C18.3503 12.3151 18.3484 11.5468 17.8668 11.0717C17.3853 10.5966 16.6065 10.5947 16.1273 11.0674C15.6482 11.5401 15.6501 12.3085 16.1317 12.7836C16.6132 13.2587 17.392 13.2606 17.8712 12.7879Z"
                    fill="#B3B6B6"
                  />
                  <path
                    id="optionOrganizations"
                    d="M17.1599 7.06139C16.905 7.09428 16.6461 7.04759 16.4194 6.92789C16.1928 6.80819 16.0098 6.62147 15.8962 6.39395C15.7826 6.16643 15.7441 5.90953 15.786 5.6593C15.8279 5.40906 15.9482 5.17807 16.13 4.99872C16.3118 4.81938 16.5459 4.7007 16.7996 4.65933C17.0532 4.61796 17.3136 4.65598 17.5442 4.76806C17.7748 4.88014 17.964 5.06065 18.0854 5.28426C18.2067 5.50786 18.254 5.76334 18.2207 6.01482C18.1855 6.28022 18.0624 6.52672 17.8706 6.71598C17.6788 6.90525 17.4289 7.02667 17.1599 7.06139ZM28.0768 28.9284C27.8334 28.9284 27.5955 28.9996 27.3931 29.133C27.1907 29.2665 27.0329 29.4561 26.9398 29.678C26.8466 29.8999 26.8222 30.144 26.8697 30.3796C26.9172 30.6151 27.0344 30.8315 27.2065 31.0013C27.3787 31.1711 27.598 31.2868 27.8367 31.3336C28.0755 31.3805 28.3229 31.3564 28.5478 31.2645C28.7727 31.1726 28.9649 31.017 29.1002 30.8173C29.2354 30.6176 29.3076 30.3828 29.3076 30.1427C29.3076 29.8206 29.1779 29.5118 28.9471 29.284C28.7163 29.0563 28.4033 28.9284 28.0768 28.9284ZM28.0768 22.857C27.8334 22.857 27.5955 22.9282 27.3931 23.0616C27.1907 23.195 27.0329 23.3847 26.9398 23.6066C26.8466 23.8284 26.8222 24.0726 26.8697 24.3081C26.9172 24.5437 27.0344 24.7601 27.2065 24.9299C27.3787 25.0997 27.598 25.2153 27.8367 25.2622C28.0755 25.3091 28.3229 25.285 28.5478 25.1931C28.7727 25.1012 28.9649 24.9456 29.1002 24.7459C29.2354 24.5462 29.3076 24.3114 29.3076 24.0712C29.3076 23.7492 29.1779 23.4403 28.9471 23.2126C28.7163 22.9849 28.4033 22.857 28.0768 22.857ZM28.0768 16.7855C27.8334 16.7855 27.5955 16.8568 27.3931 16.9902C27.1907 17.1236 27.0329 17.3133 26.9398 17.5351C26.8466 17.757 26.8222 18.0012 26.8697 18.2367C26.9172 18.4723 27.0344 18.6886 27.2065 18.8585C27.3787 19.0283 27.598 19.1439 27.8367 19.1908C28.0755 19.2376 28.3229 19.2136 28.5478 19.1217C28.7727 19.0298 28.9649 18.8741 29.1002 18.6744C29.2354 18.4748 29.3076 18.24 29.3076 17.9998C29.3076 17.6778 29.1779 17.3689 28.9471 17.1412C28.7163 16.9135 28.4033 16.7855 28.0768 16.7855ZM23.1538 28.9284C22.9103 28.9284 22.6724 28.9996 22.47 29.133C22.2676 29.2665 22.1098 29.4561 22.0167 29.678C21.9235 29.8999 21.8991 30.144 21.9466 30.3796C21.9941 30.6151 22.1113 30.8315 22.2835 31.0013C22.4556 31.1711 22.6749 31.2868 22.9136 31.3336C23.1524 31.3805 23.3999 31.3564 23.6247 31.2645C23.8496 31.1726 24.0419 31.017 24.1771 30.8173C24.3123 30.6176 24.3845 30.3828 24.3845 30.1427C24.3845 29.8206 24.2549 29.5118 24.024 29.284C23.7932 29.0563 23.4802 28.9284 23.1538 28.9284ZM23.1538 22.857C22.9103 22.857 22.6724 22.9282 22.47 23.0616C22.2676 23.195 22.1098 23.3847 22.0167 23.6066C21.9235 23.8284 21.8991 24.0726 21.9466 24.3081C21.9941 24.5437 22.1113 24.7601 22.2835 24.9299C22.4556 25.0997 22.6749 25.2153 22.9136 25.2622C23.1524 25.3091 23.3999 25.285 23.6247 25.1931C23.8496 25.1012 24.0419 24.9456 24.1771 24.7459C24.3123 24.5462 24.3845 24.3114 24.3845 24.0712C24.3845 23.7492 24.2549 23.4403 24.024 23.2126C23.7932 22.9849 23.4802 22.857 23.1538 22.857ZM23.1538 16.7855C22.9103 16.7855 22.6724 16.8568 22.47 16.9902C22.2676 17.1236 22.1098 17.3133 22.0167 17.5351C21.9235 17.757 21.8991 18.0012 21.9466 18.2367C21.9941 18.4723 22.1113 18.6886 22.2835 18.8585C22.4556 19.0283 22.6749 19.1439 22.9136 19.1908C23.1524 19.2376 23.3999 19.2136 23.6247 19.1217C23.8496 19.0298 24.0419 18.8741 24.1771 18.6744C24.3123 18.4748 24.3845 18.24 24.3845 17.9998C24.3845 17.6778 24.2549 17.3689 24.024 17.1412C23.7932 16.9135 23.4802 16.7855 23.1538 16.7855Z"
                    fill="#B3B6B6"
                  />
                </svg>
              </button>
              <p className="optionsHeading">Organizations</p>
            </Grid>
            <Grid item xs={2}>
              <button
                id="optionFashionBrands"
                onClick={(e) => {
                  setIsSelected({
                    ...isSelected,
                    Individuals: false,
                    FashionBrands: true,
                    Organizations: false,
                    Suppliers: false
                  });
                  SpecifyDomainToggle(e);
                }}
                type="button"
                className="optionFashionBrands options optionsDomain"
              >
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 38 38"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    id="optionFashionBrands"
                    d="M15.7118 11.0383C15.3189 9.10969 14.8464 6.51658 14.8464 5.15373C14.8428 4.60728 14.9479 4.06557 15.1554 3.56004C15.3629 3.05451 15.6687 2.59521 16.0551 2.20881C16.4415 1.8224 16.9008 1.51658 17.4063 1.30909C17.9118 1.1016 18.4536 0.996563 19 1.00009C21.2942 1.00009 23.1536 2.90374 23.1536 5.15373C23.1536 6.47961 22.6836 9.08719 22.2882 11.0383M15.7118 26.9617C15.3173 28.8951 14.8464 31.4746 14.8464 32.8463C14.8428 33.3927 14.9479 33.9344 15.1554 34.44C15.3629 34.9455 15.6687 35.4048 16.0551 35.7912C16.4415 36.1776 16.9008 36.4834 17.4063 36.6909C17.9118 36.8984 18.4536 37.0034 19 36.9999C21.2942 36.9999 23.1536 35.0963 23.1536 32.8463C23.1536 31.5172 22.6836 28.9144 22.2882 26.9617M26.9617 15.7118C28.8951 15.3173 31.4746 14.8464 32.8463 14.8464C33.3927 14.8428 33.9344 14.9479 34.44 15.1554C34.9455 15.3629 35.4048 15.6687 35.7912 16.0551C36.1776 16.4415 36.4834 16.9008 36.6909 17.4063C36.8984 17.9118 37.0034 18.4536 36.9999 19C36.9999 21.2942 35.0963 23.1536 32.8463 23.1536C31.5204 23.1536 28.9128 22.6836 26.9617 22.2882M11.0383 15.711C9.10969 15.3181 6.51818 14.8464 5.15373 14.8464C4.60728 14.8428 4.06557 14.9479 3.56004 15.1554C3.05451 15.3629 2.59521 15.6687 2.20881 16.0551C1.8224 16.4415 1.51658 16.9008 1.30909 17.4063C1.1016 17.9118 0.996563 18.4536 1.00009 19C1.00009 21.2942 2.90374 23.1536 5.15373 23.1536C6.47961 23.1536 9.08719 22.6836 11.0383 22.2882"
                    stroke="#B3B6B6"
                    stroke-width="1.5"
                    stroke-miterlimit="10"
                    stroke-linecap="round"
                  />
                  <path
                    id="optionFashionBrands"
                    d="M22.2878 11.0384C23.3767 9.39268 24.8834 7.24153 25.8533 6.27242C26.2371 5.88345 26.6944 5.57459 27.1986 5.36379C27.7028 5.15299 28.2438 5.04443 28.7903 5.04443C29.3368 5.04443 29.8778 5.15299 30.382 5.36379C30.8862 5.57459 31.3435 5.88345 31.7274 6.27242C33.3498 7.89483 33.3184 10.5554 31.7274 12.1465C30.7904 13.0843 28.62 14.611 26.9614 15.7119M11.0379 22.2883C9.39219 23.3772 7.24104 24.8839 6.27194 25.8538C5.88296 26.2376 5.5741 26.6949 5.3633 27.1991C5.1525 27.7033 5.04395 28.2443 5.04395 28.7908C5.04395 29.3373 5.1525 29.8783 5.3633 30.3825C5.5741 30.8867 5.88296 31.344 6.27194 31.7278C7.89434 33.3502 10.555 33.3189 12.146 31.7278C13.0838 30.7909 14.6106 28.6204 15.7114 26.9619M26.9614 22.2883C28.6071 23.3772 30.7583 24.8839 31.7274 25.8538C32.1163 26.2376 32.4252 26.6949 32.636 27.1991C32.8468 27.7033 32.9553 28.2443 32.9553 28.7908C32.9553 29.3373 32.8468 29.8783 32.636 30.3825C32.4252 30.8867 32.1163 31.344 31.7274 31.7278C30.105 33.3502 27.4443 33.3189 25.8533 31.7278C24.9139 30.7885 23.3895 28.622 22.2878 26.9619M15.7114 11.0384C14.6242 9.39669 13.1095 7.2359 12.146 6.27242C11.7622 5.88345 11.3049 5.57459 10.8007 5.36379C10.2965 5.15299 9.75546 5.04443 9.20898 5.04443C8.66249 5.04443 8.12145 5.15299 7.61727 5.36379C7.11308 5.57459 6.65579 5.88345 6.27194 6.27242C4.64953 7.89483 4.68087 10.5554 6.27194 12.1465C7.20488 13.0794 9.38174 14.6118 11.0379 15.7119"
                    stroke="#B3B6B6"
                    stroke-width="1.5"
                    stroke-miterlimit="10"
                    stroke-linecap="round"
                  />
                  <path
                    id="optionFashionBrands"
                    d="M19.0006 24.1432C21.841 24.1432 24.1437 21.8405 24.1437 19.0001C24.1437 16.1596 21.841 13.8569 19.0006 13.8569C16.1601 13.8569 13.8574 16.1596 13.8574 19.0001C13.8574 21.8405 16.1601 24.1432 19.0006 24.1432Z"
                    stroke="#B3B6B6"
                    stroke-width="1.5"
                    stroke-miterlimit="10"
                    stroke-linecap="round"
                  />
                </svg>
              </button>
              <p className="optionsHeading">Fashion Brands</p>
            </Grid>
            <Grid item xs={2}>
              <button
                id="optionIndividuals"
                onClick={(e) => {
                  // Individuals = true;
                  // FashionBrands = false;
                  // Organizations = false;
                  // Suppliers = false;
                  setIsSelected({
                    ...isSelected,
                    Individuals: true,
                    FashionBrands: false,
                    Organizations: false,
                    Suppliers: false
                  });
                  SpecifyDomainToggle(e);
                  console.log(isSelected.Individuals);
                }}
                type="button"
                className="optionIndividuals options optionsDomain"
              >
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 36 36"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <circle
                    id="optionIndividuals"
                    cx="17.3682"
                    cy="10.917"
                    r="7.16705"
                    stroke="#B3B6B6"
                    stroke-width="1.5"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                  <path
                    id="optionIndividuals"
                    fill-rule="evenodd"
                    clip-rule="evenodd"
                    d="M6.00002 28.0523C5.9981 27.5485 6.11078 27.0508 6.32954 26.597C7.01604 25.224 8.95197 24.4963 10.5584 24.1667C11.7169 23.9195 12.8915 23.7543 14.0733 23.6725C16.2613 23.4803 18.4619 23.4803 20.6499 23.6725C21.8316 23.7553 23.0061 23.9204 24.1648 24.1667C25.7712 24.4963 27.7071 25.1553 28.3936 26.597C28.8336 27.5221 28.8336 28.5962 28.3936 29.5214C27.7071 30.9631 25.7712 31.6221 24.1648 31.9379C23.0076 32.1954 21.8326 32.3652 20.6499 32.4459C18.869 32.5969 17.0799 32.6244 15.2952 32.5283C14.8833 32.5283 14.4851 32.5283 14.0733 32.4459C12.8949 32.3662 11.7245 32.1964 10.5721 31.9379C8.95197 31.6221 7.02977 30.9631 6.32954 29.5214C6.1119 29.0623 5.99933 28.5604 6.00002 28.0523Z"
                    stroke="#B3B6B6"
                    stroke-width="1.5"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                  />
                </svg>
              </button>
              <p className="optionsHeading">Individuals</p>
            </Grid>
            <Grid item xs={2}>
              <button
                id="optionOther"
                onClick={(e) => {
                  setIsSelected({
                    ...isSelected,
                    Individuals: false,
                    FashionBrands: false,
                    Organizations: false,
                    Suppliers: false
                  });

                  SpecifyDomainToggle(e);
                  console.log(isSelected);
                }}
                type="button"
                className="optionOther options optionsDomain"
              >
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 16 4"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <circle
                    id="optionOther"
                    className=""
                    cx="2"
                    cy="2"
                    r="2"
                    transform="rotate(-180 2 2)"
                    fill="#B3B6B6"
                  />
                  <circle
                    className=""
                    id="optionOther"
                    cx="8"
                    cy="2"
                    r="2"
                    transform="rotate(-180 8 2)"
                    fill="#B3B6B6"
                  />
                  <circle
                    className=""
                    id="optionOther"
                    cx="14"
                    cy="2"
                    r="2"
                    transform="rotate(-180 14 2)"
                    fill="#B3B6B6"
                  />
                </svg>
              </button>
              <p className="optionsHeading">Other</p>
            </Grid>
          </Grid>
        </Grid>
        {/* {isSelected.Individuals ? <Individuals /> : ''}
        {isSelected.FashionBrands ? <FashionBrands /> : ''}
        {isSelected.Organizations ? <Organizations /> : ''}
        {isSelected.Suppliers ? <Suppliers /> : ''}
        {isSelected.Other ? <div></div> : ''} */}
        <div
          style={{
            display: isSelected.Individuals === true ? 'block' : 'none'
          }}
        >
          <Individuals />
        </div>
        <div
          style={{
            display: isSelected.FashionBrands === true ? 'block' : 'none'
          }}
        >
          <FashionBrands />
        </div>
        <div
          style={{
            display: isSelected.Organizations === true ? 'block' : 'none'
          }}
        >
          <Organizations />
        </div>
        <div
          style={{ display: isSelected.Suppliers === true ? 'block' : 'none' }}
        >
          <Suppliers />
        </div>

        <div className="fButton">
          <button type="button" className="completeBtn">
            <CheckIcon />
            <span style={{ marginLeft: '10px', marginTop: '2px' }}>
              Complete
            </span>
          </button>
        </div>
      </Grid>
    </>
  );
};

export default Register;
